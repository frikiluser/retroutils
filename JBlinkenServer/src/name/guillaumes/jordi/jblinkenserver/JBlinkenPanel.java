/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JBlinkenPanel.java
 *
 * Created on 09/01/2013, 20:24:31
 */
package name.guillaumes.jordi.jblinkenserver;

import javax.swing.ImageIcon;
import javax.swing.JLabel;
import org.netbeans.lib.awtextra.AbsoluteConstraints;

/**
 *
 * @author jguillaumes
 */
public class JBlinkenPanel extends javax.swing.JFrame {

    
    public static final short BLF_NOPARITY = 0x01;
    public static final short BLF_ERROR    = 0x02;
    public static final short BLF_TEST     = 0x04;

    private JBlinkenServer controller = null;
    
    /** Creates new form JBlinkenPanel */
    public JBlinkenPanel(JBlinkenServer controller) {
        int x = 100;
        int y = 50;

        this.controller = controller;
        initComponents();
        
        iconRed     = new ImageIcon(getClass().getResource("/resources/Red.png"));
        iconGreen   = new ImageIcon(getClass().getResource("/resources/Green.png"));
        iconOrange  = new ImageIcon(getClass().getResource("/resources/Orange.png"));
        iconBlack   = new ImageIcon(getClass().getResource("/resources/Black.png"));
        
        for (int i=15; i>=0; i--) {
            bitsLabel[i] = new JLabel();
            bitsLabel[i].setIcon(iconBlack);
            getContentPane().add(bitsLabel[i], new AbsoluteConstraints(x, y));
            x += 35;
        }
        
        errorLabel.setIcon(iconBlack);
        parityLabel.setIcon(iconBlack);
        
        getContentPane().add(errorLabel, new AbsoluteConstraints(20,y));
        getContentPane().add(parityLabel, new AbsoluteConstraints(55,y));

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        listenMenuItem = new javax.swing.JCheckBoxMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(700, 200));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        fileMenu.setText("File");

        listenMenuItem.setSelected(true);
        listenMenuItem.setText("Listen");
        fileMenu.add(listenMenuItem);

        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        jMenuBar1.add(fileMenu);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        this.setVisible(false);
        this.dispose();
        controller.setToExit();
    }//GEN-LAST:event_exitMenuItemActionPerformed

    public void setError(boolean err) {
        if (err) {
            errorLabel.setIcon(iconRed);
        } else {
            errorLabel.setIcon(iconBlack);            
        }
    }
        
    public void setLights(int flags, int lights) {
        int n=lights;
        
        if ((flags & BLF_ERROR) != 0) {
            errorLabel.setIcon(iconRed);
        } else {
            if (parity(lights) == 1) {
                parityLabel.setIcon(iconOrange);
            } else {
                parityLabel.setIcon(iconBlack);            
            }
            for (int i = 0; i < 16; i++) {
                errorLabel.setIcon(iconBlack);
                if (n % 2 != 0) {
                    bitsLabel[i].setIcon(iconGreen);
                } else {
                    bitsLabel[i].setIcon(iconBlack);
                }
                n /= 2;
            }
        }
    }
    
    private int parity(int number) {
        int nones = 0;
        int rem = number;
        
        while(rem > 0) {
            nones += rem % 2;
            rem /= 2;
        }
        
        return nones % 2;
    }
        
    ImageIcon iconRed;
    ImageIcon iconGreen;   
    ImageIcon iconOrange;
    ImageIcon iconBlack;
    JLabel[]  bitsLabel   = new JLabel[16];
    JLabel    parityLabel = new JLabel();
    JLabel    errorLabel  = new JLabel();
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    javax.swing.JMenuItem exitMenuItem;
    javax.swing.JMenu fileMenu;
    javax.swing.JMenuBar jMenuBar1;
    javax.swing.JCheckBoxMenuItem listenMenuItem;
    // End of variables declaration//GEN-END:variables
}
